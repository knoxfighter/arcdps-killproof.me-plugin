name: MSBuild

on: push

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Checkout with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2
      
    - name: Restore from cache and install vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: ab887c562326c686478284d9076d722c1ec4b48c
      
    - name: Setup vcpkg
      run: |
        ${{ github.workspace }}/vcpkg/vcpkg.exe integrate install
        
    - name: Update version
      shell: pwsh
      run: |
        $file = "./killproof_me/killproof_me.rc"
        $regex = '(.*(?:(?:FILEVERSION)|(?:FileVersion)|(?:PRODUCTVERSION)|(?:ProductVersion)).*?(?:\d*[.,]){3})(\d*)(.*)'
        $tmp = Get-Content $file | Foreach {
          [regex]::replace($_, $regex, 
            {param($m) $m.Groups[1].Value + ([int]${{github.run_number}}) + $m.Groups[3].Value})
        }
        $tmp | Set-Content $file

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
      
    - name: Archive files
      uses: actions/upload-artifact@v4
      with:
        name: d3d9_arcdps_killproof_me
        path: |
          x64/${{ env.BUILD_CONFIGURATION }}/d3d9_arcdps_killproof_me.dll
          x64/${{ env.BUILD_CONFIGURATION }}/d3d9_arcdps_killproof_me.pdb
